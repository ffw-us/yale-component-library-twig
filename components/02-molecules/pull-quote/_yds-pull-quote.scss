@use '../../00-tokens/tokens';
@use '../../00-tokens/functions/map';

$global-quote-themes: map.deep-get(tokens.$tokens, 'global-themes');
$quote-component-themes: map.deep-get(tokens.$tokens, 'component-themes');

blockquote {
  margin: 0;
}

.pull-quote {
  --color-pull-quote-quote: var(--color-gray-800);
  --color-pull-quote-attribution: var(--color-basic-brown-gray);

  @include tokens.spacing-page-section;

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-quote-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
    }
  }

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $quote-component-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-pull-quote-accent: var(--color-pull-quote-accent);
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-component-theme='one'] {
    --color-pull-quote-accent: var(--color-slot-one);
  }

  &[data-component-theme='two'] {
    --color-pull-quote-accent: var(--color-slot-three);
  }

  &[data-component-theme='three'] {
    --color-pull-quote-accent: var(--color-slot-five);
  }
}

.pull-quote__figure {
  @media (min-width: tokens.$break-mobile) {
    max-width: calc(var(--size-component-layout-width-content) - 11rem);
  }

  [data-pull-quote-style='bar-left'] & {
    padding-left: var(--size-spacing-6);
    border-left: var(--border-thickness-4) solid var(--color-pull-quote-accent);

    @media (min-width: tokens.$break-mobile) {
      margin-left: var(--size-spacing-7);
    }
  }

  [data-pull-quote-style='bar-right'] & {
    padding-right: var(--size-spacing-6);
    border-right: var(--border-thickness-4) solid var(--color-pull-quote-accent);
    text-align: right;

    @media (min-width: tokens.$break-mobile) {
      margin-left: 9rem;
    }
  }

  [data-pull-quote-style='quote-left'] & {
    position: relative;
    padding-left: var(--size-spacing-8);

    &::before {
      content: 'â€œ';
      font-family: var(--font-families-yalenew);
      position: absolute;
      top: 0;
      left: 0;
      font-size: 4em;
      line-height: 0.8;
      color: var(--color-pull-quote-accent);
    }

    @media (min-width: tokens.$break-mobile) {
      margin-left: var(--size-spacing-6);
    }
  }
}

.pull-quote__quote {
  font: var(--font-style-body-xl);
  color: var(--color-pull-quote-quote);

  > *:last-child {
    margin-bottom: 0;
  }
}

.pull-quote__attribution {
  font: var(--font-style-body-default);
  color: var(--color-pull-quote-attribution);
  margin-top: 0.4em;

  // if the attribution has a <p> element we need to make the `-` character
  // and the attribution text in line, and remove bottom-margin from the <p>
  display: flex;

  p {
    margin-bottom: 0;
  }
}
