@use '../../../00-tokens/tokens';
@use '../../../01-atoms/atoms';

// @TODO: Move these to a token
:root {
  --color-muted: var(--color-gray-600);
  --color-navigation-border: var(--color-blue-yale);
  --color-navigation-expanded-item: var(--color-basics-brown-gray);
}

@mixin primary-nav-item-level-0 {
  font: var(--font-style-nav-primary-0);
  color: var(--color-heading);
  text-align: left;

  &[aria-expanded='true'] {
    color: var(--color-navigation-expanded-item);
  }

  @media (max-width: tokens.$break-mobile-max) {
    padding: var(--size-spacing-2) var(--size-spacing-5) var(--size-spacing-2);
    margin-bottom: var(--size-spacing-4);
  }

  @media (min-width: tokens.$break-mobile) {
    position: relative;
    padding: var(--size-spacing-2) var(--size-spacing-5) var(--size-spacing-5);
    border-bottom: var(--border-thickness-1) solid transparent;
    border-top: var(--border-thickness-1) solid transparent;
    border-right: var(--border-thickness-1) solid transparent;
    border-left: var(--border-thickness-1) solid transparent;

    &[aria-expanded='true'] {
      z-index: 1;
      border-color: var(--color-navigation-border);
      border-bottom-color: var(--color-background);
    }
  }
}

@mixin primary-nav-item-level-1 {
  font: var(--font-style-nav-primary-1);
  color: var(--color-heading);
  padding: var(--size-spacing-2) var(--size-spacing-5);
}

@mixin primary-nav-item-level-2 {
  font: var(--font-style-nav-primary-2);
  color: var(--color-muted);
  padding: var(--size-spacing-1) var(--size-spacing-5);
}

.primary-nav {
  position: relative;

  [data-site-header-nav-position='center'] & {
    display: flex;
    place-content: center;
  }
}

.primary-nav__menu {
  @include atoms.list-reset;

  &--level-0 {
    @media (min-width: tokens.$break-mobile) {
      display: flex;
      flex-wrap: wrap;
    }
  }

  &--level-1 {
    [aria-expanded='false'] ~ & {
      display: none;
    }

    @media (max-width: tokens.$break-mobile-max) {
      // prettier-ignore
      border-left: var(--border-thickness-1) solid var(--color-navigation-border);
      margin-bottom: var(--size-spacing-6);
      margin-left: var(--size-spacing-6);
    }

    @media (min-width: tokens.$break-mobile) {
      position: absolute;
      background-color: var(--color-background);

      // Subtract enough to place it just behind an "open" toggle and hide the
      // top border. To give it the "tab" effect.
      top: calc(100% - var(--border-thickness-1));
      padding: var(--size-spacing-7) var(--size-spacing-site-gutter);
      border: var(--border-thickness-1) solid var(--color-navigation-border);
      border-bottom-width: var(--border-thickness-4);
      width: calc(100vw - calc(var(--size-spacing-site-gutter) * 2));
      max-width: var(--size-component-layout-width-max);
      column-count: 4;

      [data-site-header-nav-position='right'] & {
        right: 0;
      }

      [data-site-header-nav-position='left'] & {
        left: 0;
      }

      [data-site-header-nav-position='center'] & {
        left: 0;
      }
    }
  }

  &--level-2 {
    margin-left: var(--size-spacing-6);
  }
}

.primary-nav__item {
  &--level-0:not(:last-child) {
    @media (max-width: tokens.$break-mobile-max) {
      border-bottom: var(--border-thickness-1) solid var(--color-gray-200);
    }
  }

  &--level-1 {
    @media (min-width: tokens.$break-mobile) {
      display: block;
      break-inside: avoid-column;
    }
  }
}

.primary-nav__link {
  display: block;
  text-decoration: none;

  &:focus {
    outline-offset: -2px;
  }

  &--level-0 {
    @include primary-nav-item-level-0;

    &.primary-nav__link--with-sub {
      display: none;
    }
  }

  &--level-1 {
    @include primary-nav-item-level-1;
  }

  &--level-2 {
    @include primary-nav-item-level-2;
  }
}

.primary-nav__toggle {
  @include atoms.button-reset;

  display: flex;
  width: 100%;
  gap: var(--size-spacing-3);

  &:focus {
    outline-offset: -2px;
  }

  &--level-0 {
    @include primary-nav-item-level-0;
  }
}

.primary-nav__toggle-icon {
  .primary-nav__toggle[aria-expanded='true'] > & {
    transform: rotate(180deg);
  }
}
